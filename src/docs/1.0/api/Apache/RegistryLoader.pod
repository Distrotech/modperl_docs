=head1 NAME

Apache::RegistryLoader - Compile Apache::Registry scripts at server startup

=head1 Synopsis

  #in your Perl Startup script:
  
  use Apache::RegistryLoader ();
  
  my $r = Apache::RegistryLoader->new;
  
  $r->handler($uri, $filename);
  
  $r->handler($uri, $filename, $virtual_hostname);

=head1 Description

This modules allows compilation of C<Apache::Registry> scripts at
server startup.

The script's handler routine is compiled by the parent server, of
which children get a copy.  The C<Apache::RegistryLoader> C<handler>
method takes arguments of C<uri> and the C<filename>.  URI to filename
translation normally doesn't happen until HTTP request time, so we're
forced to roll our own translation.

If filename is omitted and a C<trans> routine was not
defined, the loader will try using the I<uri> relative to
C<ServerRoot>.  Example:

  #in httpd.conf
  ServerRoot /opt/www/apache
  Alias /perl/ /opt/www/apache/perl

  #in startup.pl
  use Apache::RegistryLoader ();

  #/opt/www/apache/perl/test.pl
  #is the script loaded from disk here:
  Apache::RegistryLoader->new->handler("/perl/test.pl");

To make the loader smarter about the uri-E<gt>filename translation,
you may provide the C<new> method with a C<trans> function to
translate the uri to filename.

The following example will pre-load all files ending with C<.pl> in
the I<perl-scripts/> directory relative to C<ServerRoot>.  The example
code assumes the Location URI I</perl> is an C<Alias> to this
directory.

  {
     use Cwd ();
     use Apache::RegistryLoader ();
     use DirHandle ();
     use strict;
     
     my $dir = Apache->server_root_relative("perl-scripts/");
     
     my $rl = Apache::RegistryLoader->new(trans => sub {
         my $uri = shift;
         $uri =~ s:^/perl/:/perl-scripts/:;
         return Apache->server_root_relative($uri);
     });
     
     my $dh = DirHandle->new($dir) or die $!;
     
     for my $file ($dh->read) {
         next unless $file =~ /\.pl$/;
         $rl->handler("/perl/$file");
     }
 }

=head1 Maintainers

Maintainer is the person(s) you should contact with updates,
corrections and patches.

=over

=item * The L<documentation mailing list|maillist::docs-dev>

=back

=head1 Authors

=over

=item * Doug MacEachern

=item * Stas Bekman (Rewrote the C<handler()> to report and handle all
the possible erroneous conditions).

=back

Only the major authors are listed above. For contributors see the
Changes file.

=head1 See Also

L<Apache::Registry>, L<Apache>, mod_perl

=cut
