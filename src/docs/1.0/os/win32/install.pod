=head1 NAME

mod_perl 1.0 Win32 Installation Instructions

=head1 Description

This document discusses how to install mod_perl 1.0 under Win32, both
in building from sources and in installing pre-compiled binary
packages.

=head1 Building from sources

You will need

=over

=item *

patience - mod_perl is considered alpha under Win32.

=item *

MSVC++ 5.0+, Apache version 1.3-dev or higher and Perl 5.004_02 or higher.

=item *

As of version 1.24_01, mod_perl will build on Win32 ActivePerls
based on Perl-5.6.x (builds 6xx). For binary compatibility you 
should use the same compiler in building mod_perl that was used 
to compile your Perl binary; for ActivePerl, this means using VC++ 6.

=back

Obtain the mod_perl sources from CPAN:

  http://www.cpan.org/authors/id/D/DO/DOUGM/mod_perl-1.xx.tar.gz

When unpacked, using Winzip or similar tools, a subdirectory
F<mod_perl-1.xx> will be created.

There are two ways to build mod_perl - with MS Developer Studio,
and through command-line arguments to 'perl Makefile.PL'. In both
cases Apache should previously have been built and installed - if
you are using a binary build of Apache, make sure that you obtain
a binary build that includes the Apache libraries and header files.

=head2 Building with MS Developer Studio

=over 3

=item Setup the Perl side

Run, from a DOS window in the top-level directory of the 
mod_perl sources,

  C:\modperl_src> perl Makefile.PL
  C:\modperl_src> nmake

This will set up the Perl side of mod_perl for the library build.

=item Build mod_perl.so

Using MS developer studio, 

 select "File -> Open Workspace ...", 
 select "Files of type [Projects (*.dsp)]"
 open mod_perl-x.xx/src/modules/win32/mod_perl.dsp

=item Settings

 select "Tools -> Options -> [Directories]"
 
 select "Show directories for: [Include files]", and add
 
   C:\Apache\include
   .  (should expand to C:\...\mod_perl-x.xx\src\modules\perl)
   C:\Perl\lib\Core

 select "Project -> Add to Project -> Files", adding:
 
   perl.lib (or perl56.lib)   (e.g. C:\perl\lib\Core\perl.lib)
   ApacheCore.lib (e.g. C:\Apache\ApacheCore.lib)

 select "Build -> Set Active Configuration -> [mod_perl - Win32 Release]"

 select "Build -> Build mod_perl.so"

You may see some harmless warnings, which can be reduced (along with
the size of the DLL), by setting:

 "Project -> Settings -> [C/C++] -> Category: [Code Generation] -> 
  Use runtime library: [Multithreaded DLL]"

As well, if you are using a mod_ssl enabled Apache, you
should add I<EAPI> to the list of preprocessor definitions under

 "Project -> Settings -> [C/C++]"

=item Testing

Once mod_perl.so is built you may test mod_perl with:

   C:\modperl_src> nmake test

after which, assuming the tests are OK,

   C:\modperl_src> nmake install

will install the Perl side of mod_perl. The mod_perl.so file
built under F<mod_perl-1.xx/src/modules/win32/Release> should
be copied to your Apache modules directory (eg, F<C:\Apache\modules>).

=back

=head2 Building with Makefile.PL arguments

Generating the Makefile as, for example,

  C:\modperl_src> perl Makefile.PL APACHE_SRC=\Apache INSTALL_DLL=\Apache\modules

will build mod_perl (including mod_perl.so) entirely from 
the command line. The arguments accepted include

=over 3

=item APACHE_SRC

This can be one of two values: either the path to the Apache build
directory (eg, F<..\apache_1.3.xx>), or to the installed Apache location
(eg, F<\Apache>). This is used to set the locations of ApacheCore.lib
and the Apache header files.

=item INSTALL_DLL

This gives the location of where to install mod_perl.so
(eg, F<\Apache\modules>). No default is assumed - if this argument
is not given, mod_perl.so must be copied manually.

=item DEBUG

If true (DEBUG=1), a Debug version will be built (this assumes
that a Debug Apache has been built). If false, or not given, 
a Release version will be built.

=item EAPI

If true (EAPI=1), EAPI (Extended API) will be defined when
compiling. This is useful when building mod_perl against mod_ssl 
patched Apache sources. If false, or not given, EAPI will
not be defined.

=back

After this, running

   C:\modperl_src> nmake
   C:\modperl_src> nmake test
   C:\modperl_src> nmake install

will complete the installation.

This latter method of building mod_perl will also install the
Apache and mod_perl header files, which can then be accessed
through the Apache::src module.

=head1 Binaries

There are two major types of binary packages
available for Win32 mod_perl - all-in-one Perl/Apache/mod_perl
binaries, and mod_perl ppm (Perl Package Manager) packages.

=head2 All-in-one packages

There are at least two binary packages for Win32 that contain the
necessary Perl and Apache binaries:

  http://www.indigostar.com/
  
  ftp://theoryx5.uwinnipeg.ca/pub/other/perl-win32-bin.exe

As well as including a number of non-core modules, both of these
packages contain mod_perl. See the documentation on the web sites and
that included with the packages for installation instructions. Both of
these also include an ActiveState-compatible C<ppm> (Perl Package
Manager) utility for adding and upgrading modules.

For the adventuresome who want a taste of things to come, a 
mod_perl-2.0/Apache-2.0 binary distribution based on cvs 
sources is available - see the discussion of
L<modperl-2 on Win32|docs::2.0::os::win32::install>
for details. Be aware though that, being a pre-release version,
bugs are most likely present.

=head2 PPM Packages

For users of ActivePerl, available from

   http://www.activestate.com/

there are also C<PPM> mod_perl packages available. For this, if you
don't already have it, get and install the latest Win32 Apache binary
from

   http://httpd.apache.org/

Both ActivePerl and Apache binaries are available as C<MSI> files for
use by the Microsoft Installer - as discussed on the ActiveState site,
users of Windows 95 and 98 may need to obtain this.  In installing
these packages, you may find it convenient when transcribing any
Unix-oriented documentation to choose installation directories that do
not have spaces in their names (eg, F<C:\Perl> and F<C:\Apache>).

After installing Perl and Apache, you can then install mod_perl via
the PPM utility. ActiveState does not maintain mod_perl in their ppm
repository, so you must get it from a different location other than
ActiveState's site. One way is simply as (broken over two lines for
readability)

  C:\> ppm install
       http://theoryx5.uwinnipeg.ca/ppmpackages/mod_perl.ppd

Another way, which will be useful if you plan on installing additional
Apache modules, is to add the repository where the mod_perl package
is kept to the C<ppm> shell utility. For C<ppm2> this may be
done as (the C<set repository ...> command has been broken over two
lines for readability):

   C:\> ppm
   PPM> set repository theoryx5 
         http://theoryx5.uwinnipeg.ca/cgi-bin/ppmserver?urn:/PPMServer

while for C<ppm3> the appropriate command is (again broken over
two lines for readability):

   C:\> ppm3
   PPM> repository add theoryx5 
         http://theoryx5.uwinnipeg.ca/cgi-bin/ppmserver?urn:/PPMServer

After this, you can do

   PPM> install mod_perl
   PPM> quit
   C:\>

For C<ppm2>, use the C<set save> command to save the C<theoryx5> repository 
to your PPM configuration file, so that future PPM sessions will search this
repository, as well as ActiveState's, for requested packages.
If you are running mod_ssl under Apache, then you should
obtain the C<mod_perl-eapi.ppd> package instead.

The mod_perl PPM package also includes the necessary Apache DLL
C<mod_perl.so>; a post-installation script should be run which will
offer to copy this file to your Apache modules directory (eg,
I<C:\Apache\modules>). This might not occur with C<ppm3>, in
which case you can grab F<mod_perl.tar.gz> from
http://theoryx5.uwinnipeg.ca/ppmpackages/x86/; when
unpacked, this will contain F<mod_perl.so> in the top-level
directory.

Note that the mod_perl package available from this site will always
use the latest mod_perl sources compiled against the latest official
Apache release; depending on changes made in Apache, you may or may
not be able to use an earlier Apache binary. However, in the Apache
Win32 world it is particularly a good idea to use the latest version,
for bug and security fixes.

=head1 See Also

The directions for L<configuring mod_perl 1.0 on
Win32|docs::1.0::os::win32::config>, the L<mod_perl
documentation|docs::index>, and http://take23.org/.

=head1 Maintainers

Maintainer is the person(s) you should contact with updates,
corrections and patches.

=over

=item * 

Randy Kobes E<lt>randy@theoryx5.uwinnipeg.caE<gt>

=back


=head1 Authors

=over

=item *

Randy Kobes E<lt>randy@theoryx5.uwinnipeg.caE<gt>

=back

Only the major authors are listed above. For contributors see the
Changes file.


=cut
