# This is the main server configuration file. See URL http://www.apache.org/
# for instructions.

# This configuration only handles the mod_perl requests in /programs and
# /rprograms under directory /var/www.  Assumes it is redirected from
# httpd running on port 80 via ProxyPass.

ServerType standalone
Port 8042

HostnameLookups off
User www
Group www

# The following directive disables keepalives and HTTP header flushes for
# Netscape 2.x and browsers which spoof it. There are known problems with
# these

BrowserMatch Mozilla/2 nokeepalive

# work around bugs in MSIE 4.0
BrowserMatch "MSIE 4\.0b2;" nokeepalive force-response-1.0 downgrade-1.0

# ServerAdmin: Your address, where problems with the server should be
# e-mailed.

ServerAdmin webmaster@www.domain.com

# ServerRoot: The directory the server's config, error, and log files
# are kept in

ServerRoot /var/www

# ErrorLog: The location of the error log file. If this does not start
# with /, ServerRoot is prepended to it.

ErrorLog /var/log/httpd/error_log_perl

# TransferLog: The location of the transfer log file. If this does not
# start with /, ServerRoot is prepended to it.

TransferLog /var/log/httpd/access_log_perl

# PidFile: The file the server should log its pid to
PidFile /var/run/httpd+perl.pid

ServerName www.domain.com

# CacheNegotiatedDocs: By default, Apache sends Pragma: no-cache with each
# document that was negotiated on the basis of content. This asks proxy
# servers not to cache the document. Uncommenting the following line disables
# this behavior, and proxies will be allowed to cache the documents.

#CacheNegotiatedDocs

# Timeout: The number of seconds before receives and sends time out

Timeout 300

# KeepAlive: Whether or not to allow persistent connections (more than
# one request per connection). Set to "Off" to deactivate.

KeepAlive Off

# Server-pool size regulation.  Rather than making you guess how many
# server processes you need, Apache dynamically adapts to the load it
# sees --- that is, it tries to maintain enough server processes to
# handle the current load, plus a few spare servers to handle transient
# load spikes (e.g., multiple simultaneous requests from a single
# Netscape browser).

# It does this by periodically checking how many servers are waiting
# for a request.  If there are fewer than MinSpareServers, it creates
# a new spare.  If there are more than MaxSpareServers, some of the
# spares die off.  These values are probably OK for most sites ---

MinSpareServers 5
MaxSpareServers 10

# Number of servers to start --- should be a reasonable ballpark figure.

StartServers 5

# Limit on total number of servers running, i.e., limit on the number
# of clients who can simultaneously connect --- if this limit is ever
# reached, clients will be LOCKED OUT, so it should NOT BE SET TOO LOW.
# It is intended mainly as a brake to keep a runaway server from taking
# Unix with it as it spirals down...

MaxClients 30

# MaxRequestsPerChild: the number of requests each child process is
#  allowed to process before the child dies.
#  The child will exit so as to avoid problems after prolonged use when
#  Apache (and maybe the libraries it uses) leak.  On most systems, this
#  isn't really needed, but a few (such as Solaris) do have notable leaks
#  in the libraries.

MaxRequestsPerChild 50

# combine access.conf right here
AccessConfig /dev/null
# access.conf: Global access configuration
# Online docs at http://www.apache.org/

# prevent Apache from searching for htaccess.conf files below document root
<Directory />
  AllowOverride None
  order deny,allow
  deny from all
</Directory>

# put mod_perl programs here
# startup.perl loads all functions that we want to use within mod_perl
PerlScript /var/www/perllib/startup.perl
<Directory /var/www/programs>
  AllowOverride None
  Options ExecCGI FollowSymLinks
  SetHandler perl-script
  PerlHandler Apache::Registry
  PerlSendHeader On
  order allow,deny
  allow from all
</Directory>

# like above but no HTTP headers
<Directory /var/www/rprograms>
  AllowOverride None
  Options ExecCGI FollowSymLinks
  SetHandler perl-script
  PerlHandler Apache::Registry
  order allow,deny
  allow from all
</Directory>

# allow arbitrary *.perl files to be scattered throughout the site.
<Files *.perl>
  SetHandler perl-script
  PerlHandler Apache::Registry
  PerlSendHeader On
  Options ExecCGI
</Files>

# like *.perl, but no PerlSendHeader
<Files *.rperl>
  SetHandler perl-script
  PerlHandler Apache::Registry
  PerlSendHeader Off
  Options ExecCGI
</Files>

<Location /perl-status>
  SetHandler  perl-script
  PerlHandler Apache::Status
  order deny,allow
  deny from all
  allow from allow from 204.117.82.
</Location>

<Location /server-status>
 SetHandler server-status
  order deny,allow
  deny from all
  allow from allow from 204.117.82.
</Location>

<Location /server-info>
 SetHandler server-info
  order deny,allow
  deny from all
  allow from allow from 204.117.82.
</Location>


# combine srm.conf here
ResourceConfig /dev/null

DocumentRoot /var/www

UserDir disable

# DirectoryIndex: Name of the file or files to use as a pre-written HTML
# directory index.  Separate multiple entries with spaces.

DirectoryIndex index.html

# FancyIndexing is whether you want fancy directory indexing or standard

FancyIndexing on

# AddIcon tells the server which icon to show for different files or filename
# extensions

AddIconByEncoding (CMP,/icons/compressed.gif) x-compress x-gzip

AddIconByType (TXT,/icons/text.gif) text/*
AddIconByType (IMG,/icons/image2.gif) image/*
AddIconByType (SND,/icons/sound2.gif) audio/*
AddIconByType (VID,/icons/movie.gif) video/*

AddIcon /icons/binary.gif .bin .exe
AddIcon /icons/binhex.gif .hqx
AddIcon /icons/tar.gif .tar
AddIcon /icons/world2.gif .wrl .wrl.gz .vrml .vrm .iv
AddIcon /icons/compressed.gif .Z .z .tgz .gz .zip
AddIcon /icons/a.gif .ps .ai .eps
AddIcon /icons/layout.gif .html .shtml .htm .pdf
AddIcon /icons/text.gif .txt
AddIcon /icons/c.gif .c
AddIcon /icons/p.gif .pl .py
AddIcon /icons/f.gif .for
AddIcon /icons/dvi.gif .dvi
AddIcon /icons/uuencoded.gif .uu
AddIcon /icons/script.gif .conf .sh .shar .csh .ksh .tcl
AddIcon /icons/tex.gif .tex
AddIcon /icons/bomb.gif core

AddIcon /icons/back.gif ..
AddIcon /icons/hand.right.gif README
AddIcon /icons/folder.gif ^^DIRECTORY^^
AddIcon /icons/blank.gif ^^BLANKICON^^

# DefaultIcon is which icon to show for files which do not have an icon
# explicitly set.

DefaultIcon /icons/unknown.gif

# AddDescription allows you to place a short description after a file in
# server-generated indexes.
# Format: AddDescription "description" filename

ReadmeName README
HeaderName HEADER
IndexIgnore */.??* *~ *# */HEADER* */README* */RCS *.conf

AccessFileName htaccess.conf

DefaultType text/plain

AddEncoding x-compress Z
AddEncoding x-gzip gz

Alias /icons/ /var/www/icons/

# To use CGI scripts:
AddHandler cgi-script .cgi

# To use server-parsed HTML files
AddType text/html .shtml
AddHandler server-parsed .shtml

# Uncomment the following line to enable Apache's send-asis HTTP file
# feature
#AddHandler send-as-is asis

# If you wish to use server-parsed imagemap files, use
AddHandler imap-file map

# To enable type maps, you might want to use
#AddHandler type-map var

# Action lets you define media types that will execute a script whenever
# a matching file is called. This eliminates the need for repeated URL
# pathnames for oft-used CGI file processors.
# Format: Action media/type /cgi-script/location
# Format: Action handler-name /cgi-script/location


# Customizable error response (Apache style)
#  these come in three flavors
#
#    1) plain text
#ErrorDocument 500 "The server made a boo boo.
#  n.b.  the (") marks it as text, it does not get output
#
#    2) local redirects
#ErrorDocument 404 /missing.html
#  to redirect to local url /missing.html
#ErrorDocument 404 /cgi-bin/missing_handler.pl
#  n.b. can redirect to a script or a document using server-side-includes.
#
#    3) external redirects
#ErrorDocument 402 http://some.other_server.com/subscription_info.html
#
