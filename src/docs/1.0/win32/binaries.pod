=head1 NAME

Obtaining Apache mod_perl binaries for Win32

=head1 Description

This document discusses the two major types of binary packages
available for Win32 mod_perl - all-in-one Perl/Apache/mod_perl
binaries, and mod_perl ppm (Perl Package Manager) packages.

=head1 All-in-one packages

There are at least two binary packages for Win32 that contain the
necessary Perl and Apache binaries:

  http://www.indigostar.com/
  
  ftp://theoryx5.uwinnipeg.ca/pub/other/perl-win32-bin-x.x.exe

As well as including a number of non-core modules, both of these
packages contain mod_perl. See the documentation on the web sites and
that included with the packages for installation instructions. Both of
these also include an ActiveState-compatible C<ppm> (Perl Package
Manager) utility for adding and upgrading modules.

For the adventuresome who want a taste of things to come, a 
mod_perl-2.0/Apache-2.0 binary distribution based on cvs 
sources is available from
ftp://theoryx5.uwinnipeg.ca/pub/other/Apache2.tar.gz.
See the accompanying F<Apache2.readme> file in this directory for more
details. Be aware though that, being a pre-release version,
bugs are most likely present.

=head1 PPM Packages

For users of ActivePerl, available from

   http://www.activestate.com/

there are also C<PPM> mod_perl packages available. For this, if you
don't already have it, get and install the latest Win32 Apache binary
from

   http://httpd.apache.org/

Both ActivePerl and Apache binaries are available as C<MSI> files for
use by the Microsoft Installer - as discussed on the ActiveState site,
users of Windows 95 and 98 may need to obtain this.  In installing
these packages, you may find it convenient when transcribing any
Unix-oriented documentation to choose installation directories that do
not have spaces in their names (eg, F<C:\Perl> and F<C:\Apache>).

After installing Perl and Apache, you can then install mod_perl via
the PPM utility. ActiveState does not maintain mod_perl in the ppm
repository, so you must get it from a different location other than
ActiveState's site. One way is simply as (broken over two lines for
readability)

  C:\> ppm install
       http://theoryx5.uwinnipeg.ca/ppmpackages/mod_perl.ppd

Another way, which will be useful if you plan on installing additional
Apache modules, is to set the repository within the C<ppm> shell
utility as (the C<set repository ...> command has been broken over two
lines for readability):

   C:\> ppm
   PPM> set repository theoryx5 
         http://theoryx5.uwinnipeg.ca/cgi-bin/ppmserver?urn:/PPMServer
   PPM> install mod_perl
   PPM> set save
   PPM> quit
   C:\>

The C<set save> command saves the C<theoryx5> repository to your PPM
configuration file, so that future PPM sessions will search this
repository, as well as ActiveState's, for requested packages.

The mod_perl PPM package also includes the necessary Apache DLL
C<mod_perl.so>; a post-installation script should be run which will
offer to copy this file to your Apache modules directory (eg,
I<C:\Apache\modules>).

Note that the mod_perl package available from this site will always
use the latest mod_perl sources compiled against the latest official
Apache release; depending on changes made in Apache, you may or may
not be able to use an earlier Apache binary. However, in the Apache
Win32 world it is particularly a good idea to use the latest version,
for bug and security fixes.

=head1 Configuration

Add this line to F<C:\Apache\conf\httpd.conf>:

 LoadModule perl_module modules/mod_perl.so

Be sure that the path to your Perl binary (eg, F<C:\Perl\bin>) is in
your C<PATH> environment variable. If you have a C<ClearModuleList> 
directive enabled in F<httpd.conf>, you may also need to add

 AddModule mod_perl.c

See the descriptions of the C<ClearModuleList> and C<AddModule>
directives in the Apache documents for more details, especially
concerning the relative order of these and the C<LoadModule> directive.

=head2 Registry scripts

Using C<Apache::Registry> to speed up cgi scripts may be done as
follows. Create a directory, for example, F<C:\Apache\mod_perl>, which
will hold your scripts.  Insert then in F<C:\Apache\conf\httpd.conf>
the following directives:

  Alias /mod_perl/ "/Apache/mod_perl/"
  <Location /mod_perl>
     SetHandler perl-script
     PerlHandler Apache::Registry
     Options +ExecCGI
     PerlSendHeader On
  </Location>

whereby the script would be called as

   http://localhost/mod_perl/name_of_script

=head2 Hello World

As you will discover, there is much to mod_perl beyond simple speed-up
of cgi scripts. Here is a simple I<Hello, World> example that
illustrates the use of mod_perl as a content handler.  Create a file
F<Hello.pm> as follows:

  package Apache::Hello;
  use strict;
  use Apache::Constants qw(OK);
  
  sub handler {
     my $r = shift;
     $r->send_http_header;
     $r->print("<html><body>Hello World!</body></html>\n");
     return OK;
   }
  
  1;

and save it in, for example, the F<C:\Perl\site\lib\Apache\>
directory. Next put the following directives in
F<C:\Apache\conf\httpd.conf>:

  PerlModule Apache::Hello
  <Location /hello>
     SetHandler perl-script
     PerlHandler Apache::Hello
  </Location>

With this, calls to

   http://localhost/hello

will use C<Apache::Hello> to deliver the content.

=head1 Apache modules

The C<theorxy5> repository containing the mod_perl ppm package also
contains a number of other Apache modules, such as C<Apache::ASP>,
C<HTML::Embperl>, and C<HTML::Mason>. However, there may be ones you
find that are not available through a repository; in such cases, you
might try sending a message to the maintainer of the repository asking
if a particular package could be included.

Alternatively, you can use the C<CPAN.pm> module to fetch, build, and
install the module - see C<perldoc CPAN> for details. You will need
the B<nmake> utility for this, download it from
http://download.microsoft.com/download/vc15/Patch/1.52/W95/EN-US/Nmake15.exe
(it's a self extracting archive, so run it and then copy the files
into your F<Windows> directory).

=head1 See Also

The L<mod_perl documentation|docs::index>, http://httpd.apache.org/,
and http://www.activestate.com/.

=head1 Maintainers

Maintainer is the person(s) you should contact with updates,
corrections and patches.

=over

=item * 

Randy Kobes E<lt>randy@theoryx5.uwinnipeg.caE<gt>

=back


=head1 Authors

=over

=item *

Randy Kobes E<lt>randy@theoryx5.uwinnipeg.caE<gt>

=back

Only the major authors are listed above. For contributors see the
Changes file.


=cut

