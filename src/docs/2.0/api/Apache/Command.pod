=head1 NAME

Apache::Command - Perl API for XXX




=head1 Synopsis

  use Apache::Command ();

META: to be completed




=head1 Description

META: to be completed




=head1 API

C<Apache::Command> provides the following functions and/or methods:



Comments for Philippe:

  should the elements of ap_command_t elements be writable? if not
  set those to readonly, e.g to set func to read-only change
  xs/maps/apache_structures.map and add '<' at the beginning of the
  line:

  <command_rec>
     name
  <  func
     cmd_data
     ...
  </command_rec>

  in either case make sure to adjust the docs whether each method is
  readonly or read/write.






=head2 C<args_how>

META: Autogenerated - needs to be reviewed/completed

What the command expects as arguments

  $obj->args_how($newval);

=over 4

=item obj: C<$obj>
( C<L<Apache::Command object|docs::2.0::api::Apache::Command>> )

=item arg1: C<$newval> (integer)

=item ret: no return value

=item since: 1.99_12

=back





=head2 C<check_cmd_context>

META: Autogenerated - needs to be reviewed/completed

  $ret = $cmd->check_cmd_context($forbidden);

=over 4

=item obj: C<$cmd>
(C<L<Apache::CmdParms|docs::2.0::api::Apache::CmdParms>>)

The command to check

=item arg1: C<$forbidden> (XXX)

Where the command is forbidden.

=item ret: C<$ret> ( string )

Error string on error, NULL on success

=item since: 1.99_12

=back





=head2 C<cmd_data>

META: Autogenerated - needs to be reviewed/completed

Extra data, for functions which implement multiple commands...

  $cmd_data      = $obj->cmd_data();
  $prev_cmd_data = $obj->cmd_data($new_cmd_data);

=over 4

=item obj: C<$obj>
( C<L<Apache::Command object|docs::2.0::api::Apache::Command>> )

=item opt arg1: C<$new_cmd_data> (XXX)

=item ret: no return value

=item since: 1.99_12

=back








=head2 C<errmsg>

META: Autogenerated - needs to be reviewed/completed

'usage' message, in case of syntax errors

  $obj->errmsg($newval);

=over 4

=item obj: C<$obj>
( C<L<Apache::Command object|docs::2.0::api::Apache::Command>> )

=item arg1: C<$newval> ( string )

=item ret: no return value

=item since: 1.99_12

=back







=head2 C<name>

META: Autogenerated - needs to be reviewed/completed

Name of this command

  $name      = $obj->name();
  $prev_name = $obj->name($new_name);

=over 4

=item obj: C<$obj>
( C<L<Apache::Command object|docs::2.0::api::Apache::Command>> )

=item opt arg1: C<$new_name> ( string )

=item ret: no return value

=item since: 1.99_12

=back





=head2 C<next>

META: Autogenerated - needs to be reviewed/completed

  $ret = $cmd->next();

=over 4

=item obj: C<$cmd>
( C<L<Apache::Command object|docs::2.0::api::Apache::Command>> )

=item ret: C<$ret>
( C<L<Apache::Command object|docs::2.0::api::Apache::Command>> )

=item since: 1.99_12

=back








=head2 C<req_override>

META: Autogenerated - needs to be reviewed/completed

What overrides need to be allowed to enable this command.

  $obj->req_override($newval);

=over 4

=item obj: C<$obj>
( C<L<Apache::Command object|docs::2.0::api::Apache::Command>> )

=item arg1: C<$newval> (integer)

=item ret: no return value

=item since: 1.99_12

=back





=head2 C<soak_end_container>

META: Autogenerated - needs to be reviewed/completed

Read all data between the current E<lt>fooE<gt> and the matching
E<lt>/fooE<gt>.  All of this data is forgotten immediately.

  $ret = $cmd->soak_end_container($directive);

=over 4

=item obj: C<$cmd>
( C<L<Apache::CmdParms object|docs::2.0::api::Apache::CmdParms>> )

The cmd_parms to pass to the directives inside the container

=item arg1: C<$directive> ( string )

The directive name to read until

=item ret: C<$ret> ( string )

Error string on failure, NULL on success

=item since: 1.99_12

=back







=head1 See Also

L<mod_perl 2.0 documentation|docs::2.0::index>.




=head1 Copyright

mod_perl 2.0 and its core modules are copyrighted under
The Apache Software License, Version 2.0.




=head1 Authors

L<The mod_perl development team and numerous
contributors|about::contributors::people>.

=cut

