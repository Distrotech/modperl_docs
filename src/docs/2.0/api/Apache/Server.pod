=head1 NAME

Apache::Server - Perl API for XXX




=head1 Synopsis

  use Apache::Server ();

META: to be completed




=head1 Description

META: to be completed




=head1 API

C<Apache::Server> provides the following functions and/or methods:




=head2 C<process>

META: Autogenerated - needs to be reviewed/completed

The process this server is running in

  $ret = $obj->process($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (C<L<Apache::Process|docs::2.0::api::Apache::Process>>)

=back





=head2 C<next>

META: Autogenerated - needs to be reviewed/completed

The next server in the list

  $ret = $obj->next($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=back





=head2 C<server_admin>

META: Autogenerated - needs to be reviewed/completed



  $ret = $obj->server_admin($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (string)

=back





=head2 C<server_hostname>

META: Autogenerated - needs to be reviewed/completed

The server hostname

  $ret = $obj->server_hostname($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (string)

=back





=head2 C<port>

META: Autogenerated - needs to be reviewed/completed

for redirects, etc.

  $ret = $obj->port($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (integer)

=back





=head2 C<error_fname>

META: Autogenerated - needs to be reviewed/completed



  $ret = $obj->error_fname($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (string)

=back





=head2 C<loglevel>

META: Autogenerated - needs to be reviewed/completed

The log level for this server

  $ret = $obj->loglevel($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (integer)

=back





=head2 C<is_virtual>

META: Autogenerated - needs to be reviewed/completed



  $ret = $obj->is_virtual($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (integer)

=back





=head2 C<module_config>

META: Autogenerated - needs to be reviewed/completed

Config vector containing pointers to modules' per-server config
structures.

  $ret = $obj->module_config($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (C<L<Apache::ConfVector|docs::2.0::api::Apache::ConfVector>>)

=back





=head2 C<lookup_defaults>

META: Autogenerated - needs to be reviewed/completed

MIME type info, etc., before we start checking per-directory info

  $ret = $obj->lookup_defaults($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (C<L<Apache::ConfVector|docs::2.0::api::Apache::ConfVector>>)

=back





=head2 C<addrs>

META: Autogenerated - needs to be reviewed/completed



  $ret = $obj->addrs($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (C<L<Apache::ServerAddr|docs::2.0::api::Apache::ServerAddr>>)

=back





=head2 C<timeout>

META: Autogenerated - needs to be reviewed/completed

Timeout, as an apr interval, before we give up

  $ret = $obj->timeout($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (number)

=back





=head2 C<keep_alive_timeout>

META: Autogenerated - needs to be reviewed/completed

The apr interval we will wait for another request

  $ret = $obj->keep_alive_timeout($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (number)

=back





=head2 C<keep_alive_max>

META: Autogenerated - needs to be reviewed/completed

Maximum requests per connection

  $ret = $obj->keep_alive_max($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (integer)

=back





=head2 C<keep_alive>

META: Autogenerated - needs to be reviewed/completed

Use persistent connections?

  $ret = $obj->keep_alive($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (integer)

=back





=head2 C<path>

META: Autogenerated - needs to be reviewed/completed

Pathname for ServerPath

  $ret = $obj->path($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (string)

=back





=head2 C<names>

META: Autogenerated - needs to be reviewed/completed

Normal names for ServerAlias servers

  $ret = $obj->names($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (C<L<APR::ArrayHeader|docs::2.0::api::APR::ArrayHeader>>)

=back





=head2 C<wild_names>

META: Autogenerated - needs to be reviewed/completed

Wildcarded names for ServerAlias servers

  $ret = $obj->wild_names($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (C<L<APR::ArrayHeader|docs::2.0::api::APR::ArrayHeader>>)

=back





=head2 C<limit_req_line>

META: Autogenerated - needs to be reviewed/completed

limit on size of the HTTP request line

  $ret = $obj->limit_req_line($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (integer)

=back





=head2 C<limit_req_fieldsize>

META: Autogenerated - needs to be reviewed/completed

limit on size of any request header field

  $ret = $obj->limit_req_fieldsize($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (integer)

=back





=head2 C<limit_req_fields>

META: Autogenerated - needs to be reviewed/completed

limit on number of request header fields

  $ret = $obj->limit_req_fields($newval);

=over 4

=item arg1: C<$obj> (C<L<Apache::Server|docs::2.0::api::Apache::Server>>)

=item arg2: C<$newval> (integer)

=back




=head1 See Also

L<mod_perl 2.0 documentation|docs::2.0::index>.




=head1 Copyright

mod_perl 2.0 and its core modules are copyrighted under
The Apache Software License, Version 1.1.




=head1 Authors

L<The mod_perl development team and numerous
contributors|about::contributors::people>.

=cut

