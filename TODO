# things to do for mod_perl site infrastructure

Basic Layout:
-------------

- NS4, if PRE is long the page is scrolled to the right! See
  dst_html/docs/2.0/devel/debug_c/debug_c.html#Analyzing_the_core_File
  STATUS: currently we try to learn to live with that by not using NS4

- NS4, the navigation widgets are moved to the right, and need to
  scroll horizontally to get to them. e.g. download/source.html

- check that the stylesheet doesn't have fixed sizes, especially fonts!

DocSet:
-------

- There is some bug with resolving L<> which happens only on
  apache.org. L<docs::index> gets resolved as docs/1.0/api/index.html
  See:
  http://perl.apache.org/release/maillist/email-etiquette.html#The_mod_perl_documentation

- need to be able to copy elements from the <head> section of the
  source html into the target file. Since this may cause collisions
  with preset headers, need to override the preset header's elements
  with source header elements. meaning that the TT should be able to
  reproduce the headers.

- how do we make L<foo|../search/swish.cgi> I cannot do search::swish,
  it's not a doc.
  STATUS: need to extend pod parser with U<title (url|relative url)>

- DocSet doesn't check if there are two indentical fragment anchors on
  the same page. need to do that checking and unconditionally complain
  when this happens.

Menu: 
-----

style.css:
----------

- TOC links are blue w/o underline, and links in page have underline.
  Need to coordinate links better.


Templates:
----------

- consider passing the class name to the wrap_box template, so the
  'content' doesn't have to wrap itself in a <div> tag. If class is
  passed then we can use it in <td class="">
  STATUS: low priority

General:
--------

- Need to document the font-type and -size used for the image button,
  so in the future we can add new buttons of the same style if needed.
  STATUS: waiting for input from Allan

Content:
--------

- need to fix 404.html to include:

  <base href="http://perl.apache.org/"> 

  STATUS: DocSet needs to support copying of other than <title>
  headers first.

- how about adding a page: 'link to us', with a selection of a few
  logos/buttons for people to reuse, including a copy-n-paste-ready
  HTML fetching the logo. Though we probably want people to copy the
  images rather than linking to perl.apache.org to fetch the
  image. Could probably go into About section, which can be split into
  a few pages, making About a DocSet.

  banners:  468x60 and 150x40

  STATUS: Per Einar working on it. See banners.
          150x40 doesn't seem like a good banner size.

- ask perl.com to link to perl.apache.org from 'perl sites' section.
  + also they need to add theperlreview.com

- Need to resolve prompt issue. (user/root prompt)

- Complete the "Contribute" section with information on *how* to
  contribute (style.pod, etc for docs, and other things for devel and
  maillists)

Search:
-------
 - consider adding auto-focus feature:

  <body background="[% doc.dir.abs_doc_root %]/images/bgline.gif"
  bgcolor="#ffffff" onLoad="document.forms[0].elements[0].focus()">

  make sure that this won't create js errors, on pages without
  document.forms[0]
  STATUS: on hold

- switch for 10 results per page, and add option to select number
  of results per page.

====================================================================
*** Updating process tuning ***

I'm thinking to use cron to update the site, on let's say 6 hours
basis. Currently I manually execute an update script which does:

 cd /www/perl.apache.org/preview/modperl-docs
 cvs up
 bin/build -f
 bin/makeindex (for search)

since a complete site rebuild including pdf generation is a very heavy
operation, for efficiency we need to extend the update mechanism to
do:

* build + makeindex only if cvs up indicated that things were
  changed. That means that we need something like VCS::CVS to get the
  control over cvs.

futher optimizations:

* rerun makeindex only if things under src/ have changed

* run build -df only if things under tmpl/, src/images or lib/ have
  changed
* otherwise run build -d (without -f), the code will figure out what
  should be updated by itself.

If we do this, no one will need to ssh to the site and manually update
the site.

One thing to think about: what if something goes broken, e.g. someone
has committed code to lib/ and didn't manually verify that everything
builds properly. Then on the next automatic update, things go kaboom
and the site could become unusable. Any ideas how to prevent this?
Currently I haven't planned using cvs for the autogenerated site.

Anybody can help me to replace the 4-liner update script with a more
elaborate one?
====================================================================

Site Migration process:

- check that 404.html actually works.

- move the embperl cvs, as is and make sure that it's copied over as
  is without processing

- /dist/:

  o move the /dist/ stuff, or symlink to it. 
  o remove all the pods from /dist/
  o apache-modlist.html has moved (.htaccess already redirects it)

====================================================================

Later:
------

- Think about porting the conferences stuff.
  when we have an internal resource, link to it from
  src/help/index_top.html


- add feather in the tail
<img src="[% doc.dir.abs_doc_root %]/images/feather_transbg.gif" width=194 height=80 alt="ASF feather"> 

- should probaly move the logos from
  http://wypug.digital-word.com/mod_perl/ to the new site.

  STATUS: should be TGZed and added as link from "Link to us"
  page. Being done now.

- we definitely should include the master PNG/SVG versions of the new
  logo on the site.
  
  STATUS: On "Link to Us" page, and exists in the images dir as well.

- Need a good mod_perl banner. Most importantly, it must make it clear
  what mod_perl is all about:
    o related to web serving
    o uses Apache and Perl
    o fast, powerful, foo
  
  Building on the current logo, it should also probably include the
  Apache feather and the Perl camel, to make people see instantly that
  it's related to those 2.

  Per Einar suggested having the [modperl] logo with a bullet going
  through, using thr catch-phrase "Faster than a speeding bullet".

  Anyway, we probably need some graphic designer to make it look good.
  
  STATUS: Per Einar volunteered to make it a contest, as noone else
  wanted to :) Let's hope it goes well. Will need pretty strict
  guidelines to get what we are looking for.

- A tutorial on MVC is probably very interesting. Relevant threads:
   o http://mathforum.org/epigone/modperl/jilgygland
   o http://mathforum.org/epigone/modperl/pahphucree
   o http://mathforum.org/epigone/modperl/solchaxzim
   o http://mathforum.org/epigone/modperl/lerdginspir
   o http://mathforum.org/epigone/modperl/stremnemcland
   o http://mathforum.org/epigone/modperl/nounumspim
   o http://mathforum.org/epigone/modperl/blildeudrand
   o http://mathforum.org/epigone/modperl/zhathontimp
   o http://mathforum.org/epigone/modperl/drehkrerlnen
   o http://mathforum.org/epigone/modperl/drurflerdplald
 
  STATUS: Noone has volunteered. Perrin seemed to think he covered
  most of it in his EToys article, but I think there are still some
  parts missing. This one could be really complete, incorporating
  things like bOP, how it compares to the template approach, as well
  as other MVC techniques, pitfalls, etc.
  
  Jesse Erlbaum is going to write an article for a "Perl-related
  publication", but that probably means we're not getting it ;(
  http://mathforum.org/epigone/modperl/pahphucree/450BF163A931D4119C2B00D0B774183D3B24D5@exchange.vm.com

- Waiting for Slava Bizyayev to submit tutorial on Gzip handling in
  different browsers. See:
   o http://mathforum.org/epigone/modperl/pendskumtwox
   o http://mathforum.org/epigone/modperl/blexvarcho

- mod_perl history page in About section [Per Einar]
