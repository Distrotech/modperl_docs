# things to do for mod_perl site infrastructure

Basic Layout:
-------------

- NS4, if PRE is long the page is scrolled to the right! See
  dst_html/docs/2.0/devel/debug_c/debug_c.html#Analyzing_the_core_File
  STATUS: currently we try to live with that

DocSet:
-------

- SRC should link to the source page, not the generated HTML, even if
  the source was HTML. This now broken, need to fix.

- how do we make L<foo|../search/swish.cgi> I cannot do search::swish,
  it's not a doc.
  STATUS: need to extend pod parser with U<title (url|relative url)>

- need to have a special handling for L<...|foo::bar::index> so only
  foo::bar is checked that it's a dir in the search path and
  index.html is autogenerated. This allows us to do L<the
  guide|guide::index>
  STATUS: need to implement this

Menu: 
-----

style.css:
----------

Templates:
----------

- consider passing the class name to the wrap_box template, so the
  'content' doesn't have to wrap itself in a <div> tag. If class is
  passed then we can use it in <td class="">
  STATUS: low priority

General:
--------

- Need to document the font-type and -size used for the image button,
  so in the future we can add new buttons of the same style if needed.
  STATUS: waiting for input from Allan

Content:
--------

- need to make the content review and adjust config.cfg files to
  provide good abstracts. The same goes for src html files -- should
  use the <meta name="description" value=""> to add abstracts here.

- src/about/help.pod, should be completed

- how about adding a page: 'link to us', with a selection of a few
  logos/buttons for people to reuse, including a copy-n-paste-ready
  HTML fetching the logo. Though we probably want people to copy the
  images rather than linking to perl.apache.org to fetch the
  image. Could probably go into About section, which can be split into
  a few pages, making About a DocSet.

  banners:  468x60 and 150x40

- add to the success stories: http://perl.com/pub/a/2001/10/17/etoys.html

- ask perl.com to link to perl.apache.org from 'perl sites' section.
  + also they need to add theperlreview.com

- need to review the old site and add new rewrite rules for important
  resources that have moved.

Search:
-------

- the served from the site pages don't set Last-Modified headers,
  which is needed by swish-e. If apache.org doesn't change the
  behavior for perl.apache.org we should try to set it in .htaccess:

  SetOutputFilter ???


 - consider adding auto-focus feature:

  <body background="[% doc.dir.abs_doc_root %]/images/bgline.gif"
  bgcolor="#ffffff" onLoad="document.forms[0].elements[0].focus()">

  make sure that this won't create js errors, on pages without
  document.forms[0]
  STATUS: on hold

====================================================================
*** Updating process tuning ***

I'm thinking to use cron to update the site, on let's say 6 hours
basis. Currently I manually execute an update script which does:

 cd /www/perl.apache.org/preview/modperl-docs
 cvs up
 bin/build -f
 bin/makeindex (for search)

since a complete site rebuild including pdf generation is a very heavy
operation, for efficiency we need to extend the update mechanism to
do:

* build + makeindex only if cvs up indicated that things were
  changed. That means that we need something like VCS::CVS to get the
  control over cvs.

futher optimizations:

* rerun makeindex only if things under src/ have changed

* run build -df only if things under tmpl/, src/images or lib/ have
  changed
* otherwise run build -d (without -f), the code will figure out what
  should be updated by itself.

If we do this, no one will need to ssh to the site and manually update
the site.

One thing to think about: what if something goes broken, e.g. someone
has committed code to lib/ and didn't manually verify that everything
builds properly. Then on the next automatic update, things go kaboom
and the site could become unusable. Any ideas how to prevent this?
Currently I haven't planned using cvs for the autogenerated site.

Anybody can help me to replace the 4-liner update script with a more
elaborate one?
====================================================================

Site Migration process:

- check that 404.html actually works.

- move the embperl cvs, as is and make sure that it's copied over as
is without processing

- move the dist/ stuff, or symlink to it.

====================================================================

Later:
------

- Think about porting the conferences stuff.
  when we have an internal resource, link to it from
  src/help/index_top.html


- add feather in the tail
<img src="[% doc.dir.abs_doc_root %]/images/feather_transbg.gif" width=194 height=80 alt="ASF feather"> 
